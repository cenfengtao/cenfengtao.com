<?php
/**
 * 投票
 */
namespace Home\Controller;

use Think\Controller;
use Think\Exception;
use Think\Upload;

class VoteController extends BaseController
{
    public function voteDetail()
    {
        $this->display();
    }

    public function ajaxVoteDetail()
    {
        try {
            if ($_GET['orgId'] && !empty($_GET['orgId'])) {
                $orgId = $_GET['orgId'];
            } else {
                $orgId = M('organization')->where(['token' => $this->token])->getField('id');
            }
            $vote = M('Vote')->where(['type_id' => $orgId, 'check_status' => 2, 'status' => array('neq', 6)])->find();
            if (!$vote) {
                return show(0, '暂时没有投票活动');
            }
            $contribution = M('contribution_record')->where(['vote_id' => $vote['id'], 'user_id' => $this->user['id']])->find();
            switch ($vote['status']) {
                case 1 : //投稿中
                    return show(1, '', ['vote' => $vote, 'contribution' => $contribution]);
                case 2: //截止投稿
                    return show(2, '', ['vote' => $vote, 'contribution' => $contribution]);
                case 3: //投票中
                    $contributions = M('contribution_record')->where(['vote_id' => $vote['id'], 'status' => 2])->select();
                    return show(3, '', ['contributions' => $contributions, 'type' => $vote['upload_type']]);
                case 4: //截止投票
                    //todo
                    break;
                case 5: //发布结果
                    //todo
                    break;
                case 6: //结束
                    //todo
                    break;
                default:
                    return show(0, '找不到投票活动');
            }
        } catch (Exception $e) {
            return show(0, $e->getMessage());
        }
    }

    //投稿
    public function contribution()
    {
        $_POST = [
            'vote_id' => 4,
            'title' => '吔屎啦你',
            'username' => 'moda',
            'mobile' => '111',
        ];
        if (!$_POST['vote_id']) {
            return show(0, '投票ID参数错误');
        }
        //判断是否已投稿
        $isContribution = M('contribution_record')->where(['vote_id' => $_POST['vote_id'], 'user_id' => $this->user['id']])->getField('id');
        if (!$isContribution) {
            if (!$_POST['title']) {
                return show(0, '请填写你的作品名称');
            }
            if (!$_POST['username']) {
                return show(0, '参赛人不能为空');
            }
            if (!$_POST['mobile']) {
                return show(0, '联系手机不能为空');
            }
        }
        $vote = D('Vote')->find($_POST['vote_id']);
        $ext = end(explode('.', $_FILES[key($_FILES)]['name']));
        if ($vote['upload_type'] == 1) {
            if (!in_array($ext, ['jpg', 'png', 'gif', 'jpeg'])) {
                return show(0, '投稿格式不正确');
            }
        }
        if ($vote['upload_type'] == 2) {
            if (!in_array($ext, ['mp4'])) {
                return show(0, '投稿格式不正确');
            }
        }
        $config = array(
            'maxSize' => 12582912, //上传的文件大小限制 (0-不做限制)
            'exts' => array('jpg', 'png', 'gif', 'jpeg', 'mp4'), //允许上传的文件后缀
            'rootPath' => './Upload/', //保存根路径
            'driver' => 'LOCAL', // 文件上传驱动
            'savePath' => "/Vote/",
        );
        $uploadPath = "Upload/Vote/" . date("Y-m-d") . "/";
        if (!file_exists($uploadPath)) {
            //检查是否有该文件夹，如果没有就创建，并给予最高权限
            mkdir($uploadPath, 0777, true);
        }
        $upload = new Upload($config);
        $result = $upload->upload();
        if (!$result) {
            return show(0, $upload->getError());
        }
        $filename = "/Upload" . $result[key($result)]['savepath'] . $result[key($result)]['savename'];
        if ($isContribution) {
            return $this->contributionAgain($isContribution, ['path' => $filename, 'create_time' => time(), 'title' => $_POST['title']]);
        }
        try {
            $data = [
                'create_time' => time(),
                'user_id' => $this->user['id'],
                'type' => $vote['upload_type'],
                'path' => $filename,
                'vote_id' => $vote['id'],
            ];
            $data = array_merge($data, $_POST);
            $id = D('ContributionRecord')->insert($data);
            if ($id) {
                return show(1, '投稿成功');
            } else {
                return show(0, '投稿失败，请稍候再试');
            }
        } catch (Exception $e) {
            return show(0, $e->getMessage());
        }
    }

    public function contributionAgain($recordId, $data)
    {
        try {
            $id = D('ContributionRecord')->updateById($recordId, $data);
            if ($id === false) {
                return show(0, '重新投稿失败');
            }
            return show(1, '重新投稿成功');
        } catch (Exception $e) {
            return show(0, $e->getMessage());
        }
    }

    //投票
    public function toVote()
    {
        if (!$_GET['id']) {
            return show(0, '参数错误');
        }
        if (!$_GET['count'] || $_GET['count'] < 0) {
            return show(0, '投票数不正确');
        }
                
    }
}