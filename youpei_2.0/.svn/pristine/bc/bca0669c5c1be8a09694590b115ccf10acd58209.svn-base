<?php
namespace Home\Controller;

use Think\Controller;
use Think\Exception;

class OrdersController extends BaseController
{
    public function allOrders()
    {
        $this->title = "全部订单";
        $list = D('Order')->getListByUserId($this->user['id'], 'all');
        foreach ($list as $k => $v) {
            if ($v['product_id'] && !empty($v['product_id'])) {
                $list[$k]['pro_title'] = D('Product')->getTitleById($v['product_id']);
                $list[$k]['pro_pic'] = D('Product')->getPicById($v['product_id']);
                $list[$k]['price'] = M('product')->where("id={$v['product_id']}")->getField('price');
                //判断抢购价
                $list[$k]['price'] = D('Product')->isRushingById($v['product_id']);
            } elseif ($v['parenting_id'] && !empty($v['parenting_id'])) {
                $list[$k]['pro_title'] = M('parenting')->where("id={$v['parenting_id']}")->getField('title');
                $list[$k]['pro_pic'] = M('parenting')->where("id={$v['parenting_id']}")->getField('image');
                $list[$k]['price'] = M('parenting')->where("id={$v['parenting_id']}")->getField('price');
            } else if ($v['activity_id'] && !empty($v['activity_id'])) {
                $list[$k]['pro_title'] = M('OrganizationActivity')->where("id={$v['activity_id']}")->getField('title');
                $list[$k]['pro_pic'] = M('OrganizationActivity')->where("id={$v['activity_id']}")->getField('image');
                $list[$k]['price'] = M('OrganizationActivity')->where("id={$v['activity_id']}")->getField('price');
            } else if ($v['group_record_id'] && !empty($v['group_record_id'])) {
                $groupRecord = D('GroupRecord')->find($v['group_record_id']);
                $group = D('GroupProduct')->find($groupRecord['group_id']);
                $list[$k]['pro_title'] = $group['title'];
                $list[$k]['pro_pic'] = $group['image'];
                $list[$k]['price'] = $group['price'];
            }
            $list[$k]['is_appeal'] = D('Appeal')->isAppealByOrderId($v['id'], $this->user['id']);
            $list[$k]['is_comment'] = D('ProductComment')->isCommentByOrderId($this->user['id'], $v['id']);
        }
        $this->assign("umark", "allOrders")->assign('list', $list);
        $this->display();
    }

    public function queryPayByPage()
    {
        $this->title = "待付款";
        $list = D('Order')->getListByUserId($this->user['id'], '0');
        foreach ($list as $k => $v) {
            if ($v['product_id'] && !empty($v['product_id'])) {
                $list[$k]['pro_title'] = D('Product')->getTitleById($v['product_id']);
                $list[$k]['pro_pic'] = D('Product')->getPicById($v['product_id']);
                $list[$k]['price'] = M('product')->where("id={$v['product_id']}")->getField('price');
                //判断抢购价
                $list[$k]['price'] = D('Product')->isRushingById($v['product_id']);
            } elseif ($v['parenting_id'] && !empty($v['parenting_id'])) {
                $list[$k]['pro_title'] = M('parenting')->where("id={$v['parenting_id']}")->getField('title');
                $list[$k]['pro_pic'] = M('parenting')->where("id={$v['parenting_id']}")->getField('image');
                $list[$k]['price'] = M('parenting')->where("id={$v['parenting_id']}")->getField('price');
            } else if ($v['activity_id'] && !empty($v['activity_id'])) {
                $list[$k]['pro_title'] = M('OrganizationActivity')->where("id={$v['activity_id']}")->getField('title');
                $list[$k]['pro_pic'] = M('OrganizationActivity')->where("id={$v['activity_id']}")->getField('image');
                $list[$k]['price'] = M('OrganizationActivity')->where("id={$v['activity_id']}")->getField('price');
            } else if ($v['group_record_id'] && !empty($v['group_record_id'])) {
                $groupRecord = D('GroupRecord')->find($v['group_record_id']);
                $group = D('GroupProduct')->find($groupRecord['group_id']);
                $list[$k]['pro_title'] = $group['title'];
                $list[$k]['pro_pic'] = $group['image'];
                $list[$k]['price'] = $group['price'];
            }
        }
        $this->assign("umark", "queryPayByPage")->assign('list', $list);
        $this->display('Orders/pay_list');
    }

    public function queryDeliveryByPage()
    {
        $this->title = "已付款";
        $list = D('Order')->getListByUserId($this->user['id'], '1');
        foreach ($list as $k => $v) {
            if ($v['product_id'] && !empty($v['product_id'])) {
                $list[$k]['pro_title'] = D('Product')->getTitleById($v['product_id']);
                $list[$k]['pro_pic'] = D('Product')->getPicById($v['product_id']);
                $list[$k]['price'] = M('product')->where("id={$v['product_id']}")->getField('price');
                //判断抢购价
                $list[$k]['price'] = D('Product')->isRushingById($v['product_id']);
            } elseif ($v['parenting_id'] && !empty($v['parenting_id'])) {
                $list[$k]['pro_title'] = M('parenting')->where("id={$v['parenting_id']}")->getField('title');
                $list[$k]['pro_pic'] = M('parenting')->where("id={$v['parenting_id']}")->getField('image');
                $list[$k]['price'] = M('parenting')->where("id={$v['parenting_id']}")->getField('price');
            } else if ($v['activity_id'] && !empty($v['activity_id'])) {
                $list[$k]['pro_title'] = M('OrganizationActivity')->where("id={$v['activity_id']}")->getField('title');
                $list[$k]['pro_pic'] = M('OrganizationActivity')->where("id={$v['activity_id']}")->getField('image');
                $list[$k]['price'] = M('OrganizationActivity')->where("id={$v['activity_id']}")->getField('price');
            } else if ($v['group_record_id'] && !empty($v['group_record_id'])) {
                $groupRecord = D('GroupRecord')->find($v['group_record_id']);
                $group = D('GroupProduct')->find($groupRecord['group_id']);
                $list[$k]['pro_title'] = $group['title'];
                $list[$k]['pro_pic'] = $group['image'];
                $list[$k]['price'] = $group['price'];
            }
            $list[$k]['is_appeal'] = D('Appeal')->isAppealByOrderId($v['id'], $this->user['id']);
            $list[$k]['is_comment'] = D('ProductComment')->isCommentByOrderId($this->user['id'], $v['id']);
        }
        $this->assign("umark", "queryDeliveryByPage")->assign('list', $list);
        $this->display('Orders/list_delivery');
    }

    public function queryCancelOrders()
    {
        $this->title = "取消／退款";
        $list = M('order')->where(array('user_id' => $this->user['id'], 'status' => array(
            array('eq', '2'), array('eq', '6'), array('eq', '7'), array('eq', '3'), 'or')))->select();
        foreach ($list as $k => $v) {
            if ($v['product_id'] && !empty($v['product_id'])) {
                $list[$k]['pro_title'] = D('Product')->getTitleById($v['product_id']);
                $list[$k]['pro_pic'] = D('Product')->getPicById($v['product_id']);
                $list[$k]['price'] = M('product')->where("id={$v['product_id']}")->getField('price');
                //判断抢购价
                $list[$k]['price'] = D('Product')->isRushingById($v['product_id']);
            } elseif ($v['parenting_id'] && !empty($v['parenting_id'])) {
                $list[$k]['pro_title'] = M('parenting')->where("id={$v['parenting_id']}")->getField('title');
                $list[$k]['pro_pic'] = M('parenting')->where("id={$v['parenting_id']}")->getField('image');
                $list[$k]['price'] = M('parenting')->where("id={$v['parenting_id']}")->getField('price');
            } else if ($v['activity_id'] && !empty($v['activity_id'])) {
                $list[$k]['pro_title'] = M('OrganizationActivity')->where("id={$v['activity_id']}")->getField('title');
                $list[$k]['pro_pic'] = M('OrganizationActivity')->where("id={$v['activity_id']}")->getField('image');
                $list[$k]['price'] = M('OrganizationActivity')->where("id={$v['activity_id']}")->getField('price');
            } else if ($v['group_record_id'] && !empty($v['group_record_id'])) {
                $groupRecord = D('GroupRecord')->find($v['group_record_id']);
                $group = D('GroupProduct')->find($groupRecord['group_id']);
                $list[$k]['pro_title'] = $group['title'];
                $list[$k]['pro_pic'] = $group['image'];
                $list[$k]['price'] = $group['price'];
            }
        }
        $this->assign("umark", "queryCancelOrders")->assign('list', $list);
        $this->display('Orders/list_cancel');
    }

    //重新支付
    public function payAgain()
    {
        $this->title = '重新支付';
        if (!$_GET['id'] || !is_numeric($_GET['id'])) {
            return show(0, 'ID参数错误');
        }
        $order = D('Order')->find($_GET['id']);
        //判断商品价钱是否发生改变
        if (!empty($order['product_id'])) {
            $product = D('Product')->find($order['product_id']);
            //判断抢购价
            $product['price'] = D('Product')->isRushingById($order['product_id']);
            $type = 'product';
        } else if (!empty($order['parenting_id'])) {
            $product = D('Parenting')->find($order['parenting_id']);
            $type = 'parenting';
        } else if (!empty($order['activity_id'])) {
            $product = D('OrganizationActivity')->find($order['activity_id']);
            $type = 'activity';
        } else if (!empty($order['group_record_id'])) {
            $groupId = M('group_record')->where("id={$order['group_record_id']}")->getField('group_id');
            $product = D('GroupProduct')->find($groupId);
            $type = 'group';
        } else {
            return show(0, '找不到该商品');
        }
        $nowTotalPrice = $product['price'] * $order['amount'];
        if ($nowTotalPrice != $order['total_price']) {
            //修改优惠券状态为未使用
            if ($order['coupon_id'] && !empty($order['coupon_id'])) {
                D('Coupon')->updateById($order['coupon_id'], array('status' => 0));
            }
            //修改代金券状态为未使用
            if ($order['cash_coupon_id'] && !empty($order['cash_coupon_id'])) {
                $cashCouponIds = explode(',', $order['cash_coupon_id']);
                foreach ($cashCouponIds as $val) {
                    D('Coupon')->updateById($val, array('status' => 0));
                }
            }
            D('Order')->updateById($order['id'], array('status' => 2));
            return show(0, '该订单已失效，请重新下单');
        }
        //判断支付时间是否超过9分钟
        $record = D('PayRecord')->getRecordByOrderId($order['id']);
        if ($record && $record['create_time'] + 540 < time() && in_array($record['status'], [0, 2])) {
            D('PayRecord')->updateById($record['id'], array('create_time' => time(), 'out_trade_no' => rand(1000, 9999) . '-' . date("YmdHis") . '-' . $this->user['id']));
        }
        return show(1, '订单正确', array('pro_type' => $type, 'order_id' => $order['id']));
    }

    public function addComment()
    {
        if ($_POST) {
            if (!$_POST['order_id'] || empty($_POST['order_id'])) {
                return show(0, '订单ID参数错误');
            }
            if (!$_POST['org_star'] || !$_POST['env_star'] || !$_POST['quality_star']) {
                return show(0, '请对评分项进行评分');
            }
            $order = D('Order')->find($_POST['order_id']);
            if (!empty($order['product_id'])) {
                $type = 'product_id';
                $typeId = $order['product_id'];
            } else if (!empty($order['parenting_id'])) {
                $type = 'parenting_id';
                $typeId = $order['parenting_id'];
            } else if (!empty($order['activity_id'])) {
                $type = 'activity_id';
                $typeId = $order['activity_id'];
            } else if (!empty($order['group_record_id'])) {
                $type = 'group_id';
                $typeId = M('group_record')->where("id={$order['group_record_id']}")->getField('group_id');
            } else {
                $type = 'undefined';
                $typeId = 0;
            }
            $insertData = array(
                'order_id' => $_POST['order_id'],
                'user_id' => $this->user['id'],
                'create_time' => time(),
                'status' => 1,
                'type' => 2,
                'content' => $_POST['content'],
                'org_star' => $_POST['org_star'],
                'env_star' => $_POST['env_star'],
                'quality_star' => $_POST['quality_star'],
                'token' => $this->token,
            );
            $insertData[$type] = $typeId;
            $id = D('ProductComment')->insert($insertData);
            if (!$id || empty($id)) {
                return show(0, '评论失败');
            } else {
                return show(1, '评论成功');
            }
        } else {
            $this->title = "评价页面";
            if (empty($_GET['id'])) {
                $this->error('参数错误');
            }
            $this->assign('id', $_GET['id']);
            $this->display();
        }
    }

    //添加订单
    public function addOrder()
    {
        if (!$_POST['pro_id'] || !is_numeric($_POST['pro_id'])) {
            $this->ajaxReturn(array('status' => 0, 'msg' => '商品ID不正确'));
        }
        if (!$_POST['amount'] || !is_numeric($_POST['amount']) || $_POST['amount'] < 1) {
            $this->ajaxReturn(array('status' => 0, 'msg' => '商品数量不正确'));
        }
        $product = D('Product')->find($_POST['pro_id']);
        if ($product['is_mail'] == 2 && empty($_POST['address'])) {
            $this->ajaxReturn(array('status' => 0, 'msg' => '地址不能为空'));
        }
        //判断抢购价
        $product['price'] = D('Product')->isRushingById($_POST['pro_id']);
        $totalPrice = $product['price'] * $_POST['amount'];
        $couponPrice = 0;
        //优惠券 (修改优惠券状态为使用中)
        if ($_POST['coupon_id'] && !empty($_POST['coupon_id'])) {
            $coupon = D('Coupon')->find($_POST['coupon_id']);
            if ($coupon['coupon_type'] != 1 || $coupon['full'] > $totalPrice || $coupon['status'] != 0 || time()
                > $coupon['end_time'] || ($coupon['type'] == 1 && $coupon['type_id'] != $product['org_id'])
            ) {
                $this->ajaxReturn(array('status' => 0, 'msg' => '不能使用该优惠券'));
            }
            D('Coupon')->updateById($coupon['id'], array('status' => 3));
            $couponPrice = $coupon['subtract'];
        }
        //代金券 (修改代金券状态为使用中)
        $cashCouponPrice = 0;
        if ($_POST['cash_coupon_ids'] && !empty($_POST['cash_coupon_ids'])) {
            foreach ($_POST['cash_coupon_ids'] as $k => $v) {
                $cashCoupon = D('Coupon')->find($v);
                if ($cashCoupon['coupon_type'] != 2 || $cashCoupon['status'] != 0 || time() > $cashCoupon['end_time']
                    || ($cashCoupon['type'] == 1 && $cashCoupon['type_id'] != $product['org_id'])
                ) {
                    $this->ajaxReturn(array('status' => 0, 'msg' => '不能使用该优惠券'));
                }
                D('Coupon')->updateById($cashCoupon['id'], array('status' => 3));
                $cashCouponPrice += $cashCoupon['fee'];
            }
        }
        if ($cashCouponPrice > ($totalPrice - $couponPrice)) {
            $cashCouponPrice = $totalPrice - $couponPrice;
        }
        //实际支付价钱
        $realPrice = $totalPrice - $couponPrice - $cashCouponPrice;
        $realPrice = $realPrice > 0 ? $realPrice : 0;
        $orderData = [
            'user_id' => $this->user['id'],
            'product_id' => $product['id'],
            'create_time' => time(),
            'amount' => $_POST['amount'],
            'total_price' => $totalPrice,
            'coupon_price' => $couponPrice,
            'real_price' => $realPrice,
            'coupon_id' => $_POST['coupon_id'] ?: '',
            'cash_coupon_id' => $_POST['cash_coupon_ids'] ? implode(',', $_POST['cash_coupon_ids']) : '',
            'cash_coupon_price' => $cashCouponPrice,
            'status' => 0,
            'order_number' => $this->user['id'] . substr(time(), 4, 11),
            'token' => $product['token'],
        ];
        $id = D('Order')->insert($orderData);
        if ($id) {
            D('Order')->updateById($id,array('code' => $this->user['id'] . '-'.date("mdhi").$id));
            $data['userid'] = $this->user['id'];
            $data['orderid'] = $id;
            $data['name'] = $_POST['name'];
            $data['mobile'] = $_POST['mobile'];
            $data['message'] = $_POST['message'];
            $data['address'] = $_POST['address'] ?: '';
            $rs = M('order_info')->add($data);
            if (false !== $rs) {
                $this->ajaxReturn(array('status' => 1, 'msg' => '订单创建成功', 'orderId' => $id));
            }
        } else {
            $this->ajaxReturn(array('status' => 0, 'msg' => '订单创建失败'));
        }
    }

    //取消订单
    public function cancelOrder()
    {
        if (!$_POST['order_id'] || !is_numeric($_POST['order_id'])) {
            $this->ajaxReturn(array('status' => 0, 'msg' => '订单ID参数错误'));
        }
        try {
            $order = D("Order")->find($_POST['order_id']);
            if ($order['status'] != 0) {
                $this->ajaxReturn(array('status' => 0, 'msg' => '该订单不能取消'));
            }
            //修改优惠券状态为未使用
            if ($order['coupon_id'] && !empty($order['coupon_id'])) {
                D('Coupon')->updateById($order['coupon_id'], array('status' => 0));
            }
            //修改代金券状态为未使用
            if ($order['cash_coupon_id'] && !empty($order['cash_coupon_id'])) {
                $cashCouponIds = explode(',', $order['cash_coupon_id']);
                foreach ($cashCouponIds as $val) {
                    D('Coupon')->updateById($val, array('status' => 0));
                }
            }
            //修改订单状态
            $id = D('Order')->updateById($order['id'], array('status' => '2', 'end_time' => time()));
            if ($id) {
                $this->ajaxReturn(array('status' => 1, 'msg' => '取消成功'));
            } else {
                $this->ajaxReturn(array('status' => 0, 'msg' => '取消失败'));
            }
        } catch (Exception $e) {
            $this->ajaxReturn(array('status' => 0, 'msg' => $e->getMessage()));
        }
    }

    //删除订单
    public function deleteOrder()
    {
        if (!$_POST['order_id'] || !is_numeric($_POST['order_id'])) {
            $this->ajaxReturn(array('status' => 0, 'msg' => '订单ID参数错误'));
        }
        try {
            $order = D("Order")->find($_POST['order_id']);
            if ($order['status'] == 0) {
                $this->ajaxReturn(array('status' => 0, 'msg' => '请先取消订单再删除'));
            }
            $id = D('Order')->updateById($order['id'], array('status' => 5, 'end_time' => time()));
            if ($id) {
                $this->ajaxReturn(array('status' => 1, 'msg' => '删除成功'));
            } else {
                $this->ajaxReturn(array('status' => 0, 'msg' => '删除失败'));
            }
        } catch (Exception $e) {
            $this->ajaxReturn(array('status' => 0, 'msg' => $e->getMessage()));
        }
    }

    //添加机构活动订单
    public function addActivityOrder()
    {
        if (!$_POST['id'] || !is_numeric($_POST['id'])) {
            $this->ajaxReturn(array('status' => 0, 'msg' => 'ID参数错误'));
        }
        if (!$_POST['amount'] || $_POST['amount'] <= 0) {
            $this->ajaxReturn(array('status' => 0, 'msg' => '报名人数不正确'));
        }
        $activity = D('OrganizationActivity')->find($_POST['id']);
        $totalPrice = $activity['price'] * $_POST['amount'];
        $orderData = [
            'user_id' => $this->user['id'],
            'create_time' => time(),
            'amount' => $_POST['amount'],
            'total_price' => $totalPrice,
            'real_price' => $totalPrice,
            'activity_id' => $activity['id'],
            'token' => $this->token,
        ];
        $orderId = D('Order')->insert($orderData);
        if ($orderId) {
            $data['userid'] = $this->user['id'];
            $data['orderid'] = $orderId;
            $data['name'] = $_POST['name'];
            $data['mobile'] = $_POST['mobile'];
            $data['message'] = $_POST['message'] ?: '';
            $data['address'] = $_POST['address'] ?: '';
            $rs = M('order_info')->add($data);
            if (false !== $rs) {
                $this->ajaxReturn(array('status' => 1, 'msg' => '订单创建成功', 'orderId' => $orderId));
            }
        } else {
            $this->ajaxReturn(array('status' => 0, 'msg' => '订单创建失败'));
        }
    }

    //添加团购订单
    public function addGroupOrder()
    {
        if (!$_POST['groupRecordId'] || !is_numeric($_POST['groupRecordId'])) {
            $this->ajaxReturn(array('status' => 0, 'msg' => 'ID参数错误'));
        }
        if (!$_POST['amount'] || $_POST['amount'] <= 0) {
            $this->ajaxReturn(array('status' => 0, 'msg' => '购买人数不正确'));
        }
        $groupRecord = D('GroupRecord')->find($_POST['groupRecordId']);
        $group = D('GroupProduct')->find($groupRecord['group_id']);
        $totalPrice = $group['price'] * $_POST['amount'];
        $orderData = [
            'user_id' => $this->user['id'],
            'create_time' => time(),
            'amount' => $_POST['amount'],
            'total_price' => $totalPrice,
            'real_price' => $totalPrice,
            'group_record_id' => $groupRecord['id'],
            'token' => $this->token,
        ];
        $orderId = D('Order')->insert($orderData);
        if ($orderId) {
            $data['userid'] = $this->user['id'];
            $data['orderid'] = $orderId;
            $data['name'] = $_POST['name'];
            $data['mobile'] = $_POST['mobile'];
            $data['message'] = $_POST['message'] ?: '';
            $data['address'] = $_POST['address'] ?: '';
            $rs = M('order_info')->add($data);
            if (false !== $rs) {
                $this->ajaxReturn(array('status' => 1, 'msg' => '订单创建成功', 'orderId' => $orderId));
            }
        } else {
            $this->ajaxReturn(array('status' => 0, 'msg' => '订单创建失败'));
        }
    }

    //添加亲子活动订单
    public function addParOrder()
    {
        if (!$_POST['par_id'] || !is_numeric($_POST['par_id'])) {
            $this->ajaxReturn(array('status' => 0, 'msg' => 'ID参数错误'));
        }
        if (!$_POST['amount'] || $_POST['amount'] <= 0) {
            $this->ajaxReturn(array('status' => 0, 'msg' => '购买人数不正确'));
        }
        $Parenting = D('Parenting')->find($_POST['par_id']);
        $totalPrice = $Parenting['price'] * $_POST['amount'];
        $couponPrice = 0;
        //优惠券 (修改优惠券状态为使用中)
        if ($_POST['coupon_id'] && !empty($_POST['coupon_id'])) {
            $coupon = D('Coupon')->find($_POST['coupon_id']);
            if ($coupon['coupon_type'] != 1 || $coupon['full'] > $totalPrice || $coupon['status'] != 0 || time()
                > $coupon['end_time'] || ($coupon['type'] == 1 && $coupon['type_id'] != $Parenting['org_id'])
            ) {
                $this->ajaxReturn(array('status' => 0, 'msg' => '不能使用该优惠券'));
            }
            D('Coupon')->updateById($coupon['id'], array('status' => 3));
            $couponPrice = $coupon['subtract'];
        }
        //代金券 (修改代金券状态为使用中)
        $cashCouponPrice = 0;
        if ($_POST['cash_coupon_ids'] && !empty($_POST['cash_coupon_ids'])) {
            foreach ($_POST['cash_coupon_ids'] as $k => $v) {
                $cashCoupon = D('Coupon')->find($v);
                if ($cashCoupon['coupon_type'] != 2 || $cashCoupon['status'] != 0 || time() > $cashCoupon['end_time']
                    || ($cashCoupon['type'] == 1 && $cashCoupon['type_id'] != $Parenting['org_id'])
                ) {
                    $this->ajaxReturn(array('status' => 0, 'msg' => '不能使用该优惠券'));
                }
                D('Coupon')->updateById($cashCoupon['id'], array('status' => 3));
                $cashCouponPrice += $cashCoupon['fee'];
            }
        }
        if ($cashCouponPrice > ($totalPrice - $couponPrice)) {
            $cashCouponPrice = $totalPrice - $couponPrice;
        }
        //实际支付价钱
        $realPrice = $totalPrice - $couponPrice - $cashCouponPrice;
        $realPrice = $realPrice > 0 ? $realPrice : 0;
        $orderData = [
            'user_id' => $this->user['id'],
            'parenting_id' => $Parenting['id'],
            'create_time' => time(),
            'amount' => $_POST['amount'],
            'total_price' => $totalPrice,
            'coupon_price' => $couponPrice,
            'real_price' => $realPrice,
            'coupon_id' => $_POST['coupon_id'] ?: '',
            'cash_coupon_id' => $_POST['cash_coupon_ids'] ? implode(',', $_POST['cash_coupon_ids']) : '',
            'cash_coupon_price' => $cashCouponPrice,
            'status' => 0,
            'order_number' => $this->user['id'] . substr(time(), 4, 11),
            'token' => $Parenting['token'],
        ];
        $orderId = D('Order')->insert($orderData);
        if ($orderId) {
            $data['userid'] = $this->user['id'];
            $data['orderid'] = $orderId;
            $data['name'] = $_POST['name'];
            $data['mobile'] = $_POST['mobile'];
            $data['message'] = $_POST['message'] ?: '';
            $data['address'] = $_POST['address'] ?: '';
            $rs = M('order_info')->add($data);
            if (false !== $rs) {
                $this->ajaxReturn(array('status' => 1, 'msg' => '订单创建成功', 'orderId' => $orderId));
            }
        } else {
            $this->ajaxReturn(array('status' => 0, 'msg' => '订单创建失败'));
        }
    }

    //订单申诉
    public function rejectOrder()
    {
        if (!$_GET['orderId'] || empty($_GET['orderId'])) {
            return show(0, 'ID参数错误');
        }
        $find = D('Order')->find($_GET['orderId']);
        if ($find['product_id'] && !empty($find['product_id'])) {
            $find['pro_title'] = D('Product')->getTitleById($find['product_id']);
            $find['pro_pic'] = D('Product')->getPicById($find['product_id']);
            $find['price'] = M('product')->where("id={$find['product_id']}")->getField('price');
            //判断抢购价
            $find['price'] = D('Product')->isRushingById($find['product_id']);
        } elseif ($find['parenting_id'] && !empty($find['parenting_id'])) {
            $find['pro_title'] = M('parenting')->where("id={$find['parenting_id']}")->getField('title');
            $find['pro_pic'] = M('parenting')->where("id={$find['parenting_id']}")->getField('image');
            $find['price'] = M('parenting')->where("id={$find['parenting_id']}")->getField('price');
        } else if ($find['activity_id'] && !empty($find['activity_id'])) {
            $find['pro_title'] = M('OrganizationActivity')->where("id={$find['activity_id']}")->getField('title');
            $find['pro_pic'] = M('OrganizationActivity')->where("id={$find['activity_id']}")->getField('image');
            $find['price'] = M('OrganizationActivity')->where("id={$find['activity_id']}")->getField('price');
        } else if ($find['group_record_id'] && !empty($find['group_record_id'])) {
            $groupRecord = D('GroupRecord')->find($find['group_record_id']);
            $group = D('GroupProduct')->find($groupRecord['group_id']);
            $find['pro_title'] = $group['title'];
            $find['pro_pic'] = $group['image'];
            $find['price'] = $group['price'];
        }
        $this->assign('id', $_GET['orderId'])->assign('find', $find);
        $this->display();
    }

    public function uploadPic()
    {
        $config = array(
            'maxSize' => 1048576, //上传的文件大小限制 (0-不做限制)
            'exts' => array('jpg', 'png', 'gif', 'jpeg'), //允许上传的文件后缀
            'rootPath' => './Upload/', //保存根路径
            'driver' => 'LOCAL', // 文件上传驱动
            'subName' => array('date', 'Y-m'),
            'savePath' => I('dir', 'uploads') . "/"
        );
        $dirs = explode(",", C("YP_UPLOAD_DIR"));
        if (!in_array(I('dir', 'uploads'), $dirs)) {
            echo '非法文件目录！';
            return false;
        }

        $upload = new \Think\Upload($config);
        $rs = $upload->upload($_FILES);
        $Filedata = key($_FILES);
        if (!$rs) {
            $this->error($upload->getError());
        } else {
            $images = new \Think\Image();
            $images->open('./Upload/' . $rs[$Filedata]['savepath'] . $rs[$Filedata]['savename']);
            $newsavename = str_replace('.', '_thumb.', $rs[$Filedata]['savename']);
//            $vv = $images->thumb(I('width', 300), I('height', 300))->save('./Upload/' . $rs[$Filedata]['savepath'] . $newsavename);
            if (C('YP_M_IMG_SUFFIX') != '') {
                $msuffix = C('YP_M_IMG_SUFFIX');
                $mnewsavename = str_replace('.', $msuffix . '.', $rs[$Filedata]['savename']);
                $mnewsavename_thmb = str_replace('.', "_thumb" . $msuffix . '.', $rs[$Filedata]['savename']);
                $images->open('./Upload/' . $rs[$Filedata]['savepath'] . $rs[$Filedata]['savename']);
//                $images->thumb(I('width', 700), I('height', 700))->save('./Upload/' . $rs[$Filedata]['savepath'] . $mnewsavename);
//                $images->thumb(I('width', 250), I('height', 250))->save('./Upload/' . $rs[$Filedata]['savepath'] . $mnewsavename_thmb);
            }

        }
        $rs[$Filedata]['savepath'] = "Upload/" . $rs[$Filedata]['savepath'];
        $rs[$Filedata]['savethumbname'] = $rs[$Filedata]['savename'];
        $rs['status'] = 1;
        $this->ajaxReturn($rs, 'JSON');
    }

    public function addAppela()
    {
        if ($_POST) {
            if (!$_POST['content'] || empty($_POST['content'])) {
                return show(0, '内容不能为空');
            }
            $token = M('Order')->where("id={$_POST['order_id']}")->getField('token');
            $insertData = $_POST;
            $insertData['token'] = $token;
            $insertData['create_time'] = time();
            $insertData['order_id'] = $_POST['order_id'];
            $insertData['user_id'] = $this->user['id'];
            $insertData['status'] = 1;
            try {
                $id = D('Appeal')->insert($insertData);
                if ($id) {
                    return show(1, '添加成功');
                } else {
                    return show(0, '添加失败');
                }
            } catch (Exception $e) {
                return show(0, $e->getMessage());
            }
        }
    }

}