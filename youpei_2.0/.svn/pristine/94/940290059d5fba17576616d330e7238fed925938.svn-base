<?php
/**
 * 投票
 */
namespace Admin\Controller;

use Think\Controller;
use Think\Exception;

class VoteController extends CommonController
{
    public function getList()
    {
        if ($this->isSuper) {
            $list = D('Vote')->getList();
        } else {
            $org_id = M('organization')->where(['token' => $this->token])->getField('id');
            $list = D('Vote')->getList(['type' => 1, 'type_id' => $org_id]);
        }
        $this->assign('list', $list);
        $this->display();
    }

    public function addVote()
    {
        if ($_POST) {
            if (!$_POST['title']) {
                return show(0, '投票标题不能为空');
            }
            if (!$_POST['work_start_time']) {
                return show(0, '开始投稿时间不能为空');
            } else {
                $_POST['work_start_time'] = strtotime($_POST['work_start_time']);
            }
            if (!$_POST['work_end_time']) {
                return show(0, '截稿时间不能为空');
            } else {
                $_POST['work_end_time'] = strtotime($_POST['work_end_time']) + 86399;
            }
            if (!$_POST['vote_start_time']) {
                return show(0, '开始投票时间不能为空');
            } else {
                $_POST['vote_start_time'] = strtotime($_POST['vote_start_time']);
            }
            if (!$_POST['vote_end_time']) {
                return show(0, '结束投票时间不能为空');
            } else {
                $_POST['vote_end_time'] = strtotime($_POST['vote_end_time']) + 86399;
            }
            if (!$_POST['image']) {
                unset($_POST['image']);
            }
            $_POST['type'] = 1;
            try {
                if ($this->isSuper) {
                    $_POST['type'] = 2;
                } else {
                    $org_id = M('organization')->where(['token' => $this->token])->getField('id');
                    $_POST['type_id'] = $org_id;
                }
                if ($_POST['id']) {
                    return $this->save($_POST);
                }
                $id = D('Vote')->insert($_POST);
                if ($id) {
                    return show(1, '添加成功，请等待审核');
                } else {
                    return show(0, '添加失败');
                }
            } catch (Exception $e) {
                return show(0, $e->getMessage());
            }
        } else {
            $this->display();
        }
    }

    public function editVote()
    {
        if (!$_GET['id']) {
            return show(0, '参数错误');
        }
        try {
            $vote = D('Vote')->find($_GET['id']);
            $this->assign('vote', $vote);
            $this->display();
        } catch (Exception $e) {
            return show(0, $e->getMessage());
        }
    }

    public function save($data)
    {
        try {
            $id = D('Vote')->updateById($data['id'], $data);
            if ($id === false) {
                return show(0, '修改失败');
            }
            return show(1, '修改成功');
        } catch (Exception $e) {
            return show(0, $e->getMessage());
        }
    }

    public function delete()
    {
        if (!$_POST['id'] || empty($_POST['id'])) {
            return show(0, '参数错误');
        }
        try {
            $result = D('Vote')->delete($_POST['id']);
            if ($result) {
                return show(1, '删除成功');
            } else {
                return show(0, '删除失败');
            }
        } catch (Exception $e) {
            return show(0, $e->getMessage());
        }
    }

    //获取投稿列表
    public function getContribution()
    {
        if (!$_GET['id']) {
            return show(0, '投票ID参数错误');
        }
        $where = ['vote_id' => $_GET['id']];
        $contributions = D('ContributionRecord')->getList($where);
        foreach ($contributions as $key => $val) {
            $contributions[$key]['nickname'] = D('User')->getNameById($val['user_id']);
        }
        $this->assign('list', $contributions)->assign('vote_id', $_GET['id']);
        $this->display();
    }

    //修改投票结果
    public function submitContributionStatus()
    {
        if (!$_POST['id']) {
            return show(0, '参数错误');
        }
        if (!$_POST['status']) {
            return show(0, '结果参数错误');
        }
        $data = [
            'status' => $_POST['status'],
            'lose_reason' => $_POST['lose_reason']
        ];
        try {
            $id = D('ContributionRecord')->updateById($_POST['id'], $data);
            if ($id === false) {
                return show(0, '修改失败');
            } else {
                return show(1, '修改成功');
            }
        } catch (Exception $e) {
            return show(0, $e->getMessage());
        }
    }

    //发布投稿结果
    public function showContributionResult()
    {
        if (!$_GET['vote_id']) {
            return show(0, '投票ID不能为空');
        }
        $voteTitle = M('Vote')->where(['id' => $_GET['vote_id']])->getField('title');
        $records = D('ContributionRecord')->getList(['vote_id' => $_GET['vote_id']]);
        //发送模板消息
        foreach ($records as $key => $val) {
            $nickname = M('user')->where(['id' => $val['user_id']])->getField('username');
            $userOpenid = M('user')->where(['id' => $val['user_id']])->getField('open_id');
            if ($val['status'] == 3) { //落选
                $first = $nickname . '，不要气馁，下次你一定可以的';
            } else if ($val['status'] == 2) { // 入围
                $first = $nickname . '，恭喜你，你的作品入围了，赶快去拉票吧';
            } else {
                continue;
            }
            $keyword1 = $voteTitle;
            $keyword2 = $val['status'] == 2 ? '入围' : "落选原因：" . $val['lose_reason'];
            $remark = '点击查看入围作品';
            $url = "http://{$_SERVER['HTTP_HOST']}/index.php/Vote/voteDetail?token=" . $this->token;
            $templeFormat = array('__OPENID__', '__URL__', '__FIRST__', '__KEYWORD1__', '__KEYWORD2__', '__REMARK__');
            $infoFormat = array($userOpenid, $url, $first, $keyword1, $keyword2, $remark);
            $wxuser = get_wxuser($this->token);
            $result = execute_public_template('CONTRIBUTION', $templeFormat, $infoFormat, $wxuser);
            if ($result['errcode'] == 0) {
                D('ContributionRecord')->updateById($val['id'], ['template_status' => 2]);
            } else {
                D('ContributionRecord')->updateById($val['id'], ['template_status' => 3]);
            }
        }
        //修改投票状态
        D('Vote')->updateById($_GET['vote_id'], ['status' => 3]);
        return show(1, '发布成功');
    }

    public function showContribution()
    {
        if (!$_GET['id']) {
            return show(0, '参数错误');
        }
        $contribution = M('contribution_record')->where(['id' => $_GET['id']])->field('path,type')->find();
        if (!$contribution) {
            return show(0, '获取不了该作品');
        } else {
            return show(1, '获取成功', ['path' => $contribution['path'], 'type' => $contribution['type']]);
        }
    }
}