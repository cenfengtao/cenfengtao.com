<?php
namespace Home\Controller;

use Think\Controller;
use Think\Exception;

require_once __DIR__ . '/../../../ThinkPHP/Library/Org/Util/JSDDK.class.php';

class OrganizationController extends BaseController
{
    public function index()
    {
        $this->title = "机构列表";
        $orgList = D('Organization')->getOrgList('id,org_name,org_star,env_star,quality_star,picture');
        $this->assign('orgList', $orgList);
        $this->display();
    }

    public function getOrganizationIntroduce()
    {
        if (!$_GET['id'] || !is_numeric($_GET['id'])) {
            $this->error('ID参数错误');
        }
        $organization = D('Organization')->find($_GET['id']);
        $this->assign('organization', $organization);
        $this->display();
    }

    public function demo()
    {
        $this->display();
    }

    public function home()
    {
        $this->title = "优培圈";
        if (!$_GET['id'] || !is_numeric($_GET['id'])) {
            $this->error('ID参数错误');
        }
        $organization = M('Organization')->field('description', true)->where("id={$_GET['id']}")->find();
        //热门课程
        $classList = D('Product')->getClassByToken($organization['token'], 0, 'id,pic_url,org_id,title,rush_price,price,class_id');
        foreach ($classList as $k => $v) {
            $classList[$k]['class_title'] = D('ProductClass')->getTitleById($v['class_id']);
            $classList[$k]['price'] = D('Product')->getFirstKeyPrice($v['id']);
        }
        //文章福利
        $articleList = D('Article')->getArticleByToken($organization['token'], 'id,title,image,cate_id,create_time', 3);
        foreach ($articleList as $k => $v) {
            $articleList[$k]['cate_title'] = D('ArticleCate')->getTitleById($v['cate_id']);
            $articleList[$k]['time'] = date("Y-m-d", $v['create_time']);
            $articleList[$k]['comment_count'] = D('Comment')->getCountByArtId($v['id']);
            $articleList[$k]['collect'] = D('Collect')->getPageByType($v['id'], 5);
        }
        //机构活动
        $activityList = D('OrganizationActivity')->getNowActivityList($organization['token'], 0, 'id,create_time,
        max_people,start_time,end_time,activity_time,title,image,price,tag');
        //轮播信息
        $bannerList = D('OrganizationBanner')->getListByToken($organization['token']);
        $banners = [];
        foreach ($bannerList as $k => $v) {
            if ($v['type'] == 1) { //文章
                $articleImage = M('Article')->where("id={$v['type_id']}")->getField('image');
                $banners[$k] = [
                    'id' => $v['id'],
                    'type' => $v['type'],
                    'type_id' => $v['type_id'],
                    'image' => $articleImage,
                ];
            }
            if ($v['type'] == 2) { //课程
                $productImage = M('Product')->where("id={$v['type_id']}")->getField('pic_url');
                $banners[$k] = [
                    'id' => $v['id'],
                    'type' => $v['type'],
                    'type_id' => $v['type_id'],
                    'image' => $productImage,
                ];
            }
        }
        $this->assign('classList', $classList)->assign('articleList', $articleList)->assign('banners', $banners)
            ->assign('organization', $organization)->assign('activityList', $activityList);
        //获取关注信息
        $followed = M('Collect')->where(array('user_id' => $this->user['id'], 'type' => 1, 'type_id' => $_GET['id']))->find();
        if ($followed) {
            $isFollowed = 1;
        } else {
            $isFollowed = 0;
        }
        //文章推荐
        $newList = M('Article')->where(array('token' => 'g232238gc959', 'status' => 2))->order('create_time desc')->limit(3)->select();
        foreach ($newList as $k => $v) {
            $newList[$k]['org_pic'] = M('organization')->where("token='g232238gc959'")->getField('picture');
            $newList[$k]['title_name'] = mb_substr($v['title'], 0, 12, 'utf-8');
        }
        //机构活动推荐
        $actList = D('OrganizationActivity')->getNowActivityList($organization['token'], 0, 'id,create_time,
        max_people,start_time,end_time,activity_time,title,image,price,tag');
        foreach ($actList as $k => $v) {
            $actList[$k]['org_pic'] = M('organization')->where("token='g232238gc959'")->getField('picture');
            $actList[$k]['title_name'] = mb_substr($v['title'], 0, 12, 'utf-8');
        }
        $this->assign("isFollowed", $isFollowed)->assign("newList", $newList)->assign("actList", $actList);
        $this->display();
    }

    public function activityDetail()
    {
        $this->title = '活动详细';
        if (!$_GET['id'] || !is_numeric($_GET['id'])) {
            $this->error('ID参数错误');
        }
        $activity = D('OrganizationActivity')->find($_GET['id']);
        $organization = D('Organization')->findByToken($activity['token']);
        $tags = explode(' ', $activity['tag']);
        $activity['tagA'] = $tags[0] ?: '';
        $activity['tagB'] = $tags[1] ?: '';
        $activity['tagC'] = $tags[2] ?: '';
        //目前报名人数
        $nowCount = M('order')->where(array('status' => array(array('eq', 1), array('eq', 4), 'or'),
            'activity_id' => $activity['id']))->count();
        //咨询列表
        $activityComment = D('ProductComment')->getCommentByFatherActivityId(0, 0, $_GET['id']);
        foreach ($activityComment as $k => $v) {
            $activityComment[$k]['child'] = D('ProductComment')->getCommentByFatherActivityId($v['id'],
                $v['user_id'], $v['activity_id']);
            $activityComment[$k]['headImg'] = D('user')->getHeadById($v['user_id']);
        }
        $headImg = [];
        $userId = D('Order')->getGroupByActivityId($_GET['id']);
        foreach ($userId as $k => $v) {
            $headImg[$k]['headImg'] = D('User')->getHeadById($v['user_id']);
        }
        //是否收藏
        $isCollect = D('Collect')->isCollectById($this->user['id'], $_GET['id'], 6);
        $this->assign('activity', $activity)->assign('organization', $organization)
            ->assign('nowCount', $nowCount)->assign('activityComment', $activityComment)->assign('headImg', $headImg)
            ->assign('isCollect', $isCollect);
        $this->display();
    }

    //添加咨询
    public function addComment()
    {
        if (!$_POST['activity_id'] || !is_numeric($_POST['activity_id'])) {
            $this->error('活动ID参数错误');
        }
        if (!$_POST['content'] || empty($_POST['content'])) {
            $this->error('评论内容不能为空');
        }
        $token = M('OrganizationActivity')->where("id={$_POST['activity_id']}")->getField('token');
        $insertData = [
            'user_id' => $this->user['id'],
            'create_time' => time(),
            'type' => 1,
            'status' => 1,
            'content' => $_POST['content'],
            'token' => $token,
            'activity_id' => $_POST['activity_id'],
        ];
        $id = D('ProductComment')->insert($insertData);
        if ($id) {
            return show(1, '咨询成功');
        } else {
            return show(0, '咨询失败');
        }
    }

    //选择购买参数
    public function chooseOrderInfo()
    {
        if (!$_GET['id'] || !is_numeric($_GET['id'])) {
            $this->error('ID参数不能为空');
        }
        $activity = D('OrganizationActivity')->find($_GET['id']);
        //还可下单人数
        $nowCount = M('order')->where(array('status' => array(array('eq', 1), array('eq', 4), 'or'),
            'activity_id' => $activity['id']))->count();
        $maxPeople = $activity['max_people'] - $nowCount;
        $this->assign('activity', $activity)->assign('maxPeople', $maxPeople);
        $this->display();
    }

    public function confirmationInfo()
    {
        $this->title = "确认信息";
        if (!$_GET['id'] || !is_numeric($_GET['id'])) {
            $this->error('ID参数不能为空');
        }
        if (!$_GET['count'] || !is_numeric($_GET['count']) || $_GET['count'] <= 0) {
            $this->error('数量不能为空');
        }
        $activity = D('OrganizationActivity')->find($_GET['id']);
        $totalPrice = $activity['price'] * $_GET['count'];
        $this->assign('activity', $activity)->assign('count', $_GET['count'])->assign('totalPrice', $totalPrice);
        $this->display();
    }

    public function loadingOrganization()
    {
        if (!$_POST['id'] || !is_numeric($_POST['id'])) {
            $this->error('ID参数错误');
        }
        $organization = D('Organization')->find($_POST['id']);
        $page = (int)I('page');
        if ($_POST['cate_id'] == 1) {
            //热门课程
            $list = D('Product')->getClassByToken($organization['token'], $page);
            if (!$list || empty($list)) {
                $this->ajaxReturn(array('status' => 1, 'msg' => '没有数据'));
            }
            foreach ($list as $k => $v) {
                $list[$k]['class_title'] = D('ProductClass')->getTitleById($v['class_id']);
                $list[$k]['province'] = $organization['province'];
                $list[$k]['city'] = $organization['city'];
                $list[$k]['area'] = $organization['area'];
                $list[$k]['address'] = $organization['address'];
                //判断抢购价
                $list[$k]['price'] = D('Product')->isRushingById($v['id']);
            }

            $this->ajaxReturn(array('status' => 2, 'msg' => '获取到热门课程数据', 'data' => $list));
        } else if ($_POST['cate_id'] == 2) {
            //文章福利
            $list = D('Article')->getArticleByTokens($organization['token'], $page);
            if (!$list || empty($list)) {
                $this->ajaxReturn(array('status' => 1, 'msg' => '没有数据'));
            }
            foreach ($list as $k => $v) {
                $list[$k]['cate_title'] = D('ArticleCate')->getTitleById($v['cate_id']);
                $list[$k]['time'] = date("Y-m-d", $v['create_time']);
                $list[$k]['comment_count'] = D('Comment')->getCountByArtId($v['id']);
                $list[$k]['collect'] = D('Collect')->getPageByType($v['id'], 5);
            }
            $this->ajaxReturn(array('status' => 3, 'msg' => '获取到文章福利数据', 'data' => $list));
        } else if ($_POST['cate_id'] == 3) {
            //机构活动
            $list = D('OrganizationActivity')->getNowActivityList($organization['token'], $page);
            if (!$list || empty($list)) {
                $this->ajaxReturn(array('status' => 1, 'msg' => '没有数据'));
            }
            foreach ($list as $k => $v) {
                $list[$k]['time'] = date('Y-m-d', $v['activity_time']);
            }

            $this->ajaxReturn(array('status' => 4, 'msg' => '获取到机构活动数据', 'data' => $list));
        }
    }

    public function followed()
    {
        if ($_POST) {
            if (!$_POST['id'] || empty($_POST['id'])) {
                $this->ajaxReturn(array('status' => 0, 'message' => 'ID参数错误'));
            }
            $isFollowed = M('Collect')->where(array('user_id' => $this->user['id'], 'type' => 1, 'type_id' => $_POST['id']))->find();
            if ($isFollowed) {
                $del = D('Collect')->delete($isFollowed['id']);
                if ($del) {
                    $this->ajaxReturn(array('status' => 2, 'message' => '取消关注成功'));
                } else {
                    $this->ajaxReturn(array('status' => 0, 'message' => '取消关注失败'));
                }
            } else {
                $data = [
                    'user_id' => $this->user['id'],
                    'create_time' => time(),
                    'type' => 1,
                    'type_id' => $_POST['id']
                ];
                $res = D('Collect')->insert($data);
                if ($res) {
                    $this->ajaxReturn(array('status' => 1, 'message' => '关注成功'));
                }
                $this->ajaxReturn(array('status' => 0, 'message' => '关注失败'));
            }
        }
    }

    //机构全景
    public function fullShot()
    {
        $this->display();
    }

    public function ajaxFullShot()
    {
        if (!$_GET['id']) {
            return show(0, 'ID不能为空');
        }
        $class = M('full_shot_class')->where('org_id=' . $_GET['id'])->order('sort asc')->select();
        if (!$class) {
            return show(0, '此机构暂无添加任何图片');
        }
        if (!$_GET['class_id']) {
            $classContent = M('full_shot')->where(array('org_id' => $_GET['id'], 'class_id' => $class[0]['id']))->order('sort asc')->select();
        } else {
            $classContent = M('full_shot')->where(array('org_id' => $_GET['id'], 'class_id' => $_GET['class_id']))->order('sort asc')->select();
        }
        if (!$classContent) {
            return show(0, '暂无该分类相关图片');
        }
        return show(1, '', ['class' => $class, 'classContent' => $classContent]);
    }
}