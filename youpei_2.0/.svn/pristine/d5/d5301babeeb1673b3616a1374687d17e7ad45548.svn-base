<?php
namespace Home\Controller;

use Common\Controller\Wechat;
use Think\Controller;

/**
 *扫码关注异步处理
 **/
class ScanResponseController extends Controller
{
    public function createQrcode()
    {
        $url = $this->getQrcodeByVipId($_POST['user_id'], $_POST['scene_id']);
        $name = uniqid(time()) . '.png';
//        $filename = QRCODE_PATH . $name;
        $filename = './Upload/' . $name;
        $logo = "http://" . $_SERVER['HTTP_HOST'] . $_POST['image'];
        $qrFilename = $this->qrcodeByPoster($url, $filename, true, $logo, 9, 'L', 2, true);
        $file_info = array(
            'filename' => "/{$qrFilename}", // 表单提交的文件(这里我指定的是该项目的根目录)
        );
        $wxuser = get_wxuser($_GET['token']);
        $access_token = get_weixin_access_token($wxuser, false);
        $media_url = "https://api.weixin.qq.com/cgi-bin/material/add_material?access_token={$access_token}&type=image";
        $real_path = "{$_SERVER['DOCUMENT_ROOT']}{$file_info['filename']}";
        $postData = array("media" => "@{$real_path}", 'form-data' => $file_info);
        $result = self::http_url($media_url, $postData);
        $res = json_decode($result, true);
        $this->sendMsgByGm($res['media_id'], $_POST['open_id'], 'image');
        //调用删除接口
        $delete_url = "https://api.weixin.qq.com/cgi-bin/material/del_material?access_token={$access_token}";
        $postDelData = array('media_id' => $res['media_id']);
        $postDelData = json_encode($postDelData, true);
        $this->http_url($delete_url, $postDelData);
    }

    function sendMsgByGm($content, $open_id, $type = 'text')
    {
        $wxuser = get_wxuser($_GET['token']);
        $access_token = get_weixin_access_token($wxuser, false);
        $url = "https://api.weixin.qq.com/cgi-bin/message/custom/send?access_token=" . $access_token;
        $data = array(
            "touser" => $open_id,
            "msgtype" => $type,
            $type => array(
                $type == 'text' ? 'content' : 'media_id' => $content,
            ),
        );
        return json_decode(http_post($url, json_encode($data, JSON_UNESCAPED_UNICODE)), true);
    }

    function getQrcodeByVipId($userId, $sceneId)
    {
        $url = "https://api.weixin.qq.com/cgi-bin/qrcode/create";
        $body = array(
            'action_name' => 'QR_LIMIT_STR_SCENE',
            'action_info' => array(
                'scene' => array(
                    'scene_str' => "shareId" . $userId . '_sceneId' . $sceneId,
                )
            )
        );
        $body = json_encode($body);
        //生成结果返回
        $result = post_weixin_curl(get_wxuser($_GET['token']), $url, $body);
        return $result['url'];
    }

    function qrcodeByPoster($data, $filename, $picPath = false, $logo = false, $size = '4', $level = 'L', $padding = 2, $saveandprint = false)
    {
        import("Vendor.phpqrcode.phpqrcode");//引入工具包
        // 下面注释了把二维码图片保存到本地的代码,如果要保存图片,用$fileName替换第二个参数false
        $path = $picPath ? $picPath : SITE_PATH . "\\Public\\qrcode"; //图片输出路径
        mkdir($path);

        //在二维码上面添加LOGO
        if (empty($logo) || $logo === false) { //不包含LOGO
            if ($filename == false) {
                \QRcode::png($data, false, $level, $size, $padding, $saveandprint); //直接输出到浏览器，不含LOGO
            } else {
                // $filename=$path.'/'.$filename; //合成路径
                \QRcode::png($data, $filename, $level, $size, $padding, $saveandprint); //直接输出到浏览器，不含LOGO
            }
        } else { //包含LOGO
            if ($filename == false) {
                //$filename=tempnam('','').'.png';//生成临时文件
                die('参数错误');
            } else {
                //生成二维码,保存到文件
                // $filename = $path . '\\' . $filename; //合成路径
            }
            \QRcode::png($data, $filename, $level, $size, $padding);
            $QR = imagecreatefromstring(file_get_contents($filename));
            $logo = imagecreatefromstring(file_get_contents($logo));

            $QR_width = imagesx($QR);
            $QR_height = imagesy($QR);
            imagecopyresampled($logo, $QR, 445, 840, 0, 0, 250, 250, $QR_width, $QR_height);
            if ($saveandprint === true) {
//                $qrFilename = 'Qrcode/images/' . uniqid(time()) . '.png';
                $qrFilename = 'Upload/' . uniqid(time()) . '.png';
                imagepng($logo, $qrFilename);
                return $qrFilename;
            }
        }
        return $filename;
    }
    
    function http_url($url, $data = null)
    {
        $curl = curl_init();
        curl_setopt($curl, CURLOPT_URL, $url);
        curl_setopt($curl, CURLOPT_SSL_VERIFYPEER, FALSE);
        curl_setopt($curl, CURLOPT_SSL_VERIFYHOST, FALSE);
        curl_setopt($curl, CURLOPT_SAFE_UPLOAD, FALSE);
        if (!empty($data)) {
            curl_setopt($curl, CURLOPT_POST, 1);
            @curl_setopt($curl, CURLOPT_POSTFIELDS, $data);
        }
        curl_setopt($curl, CURLOPT_RETURNTRANSFER, 1);
        $output = curl_exec($curl);
        curl_close($curl);
        return $output;
    }

    //异步跳转
    function request_by_curl($remote_server, $post_string = array())
    {
        $ch = curl_init();
        curl_setopt($ch, CURLOPT_URL, $remote_server);
        curl_setopt($ch, CURLOPT_POST, true);
        curl_setopt($ch, CURLOPT_POSTFIELDS, $post_string);
        curl_setopt($ch, CURLOPT_TIMEOUT, 1);
        curl_setopt($ch, CURLOPT_RETURNTRANSFER, true);
        $response = curl_exec($ch);
        curl_close($ch);
        return $response;
    }
}

?>